globals().update(random = __import__("random").SystemRandom()) or globals().update(sys = __import__("sys")) or ((print("Usage: (python) passgen(.py) <len> [flags]\n len: length of passphrase to generate\n flags: optional flags to modify password\n  -u: include both uppercase and lowercase characters within words, instead of just title case (technically more secure)\n  -c: include special characters within words (more secure)\n    -c X, where X = a small integer: place special characters at X index of words (less secure than -c, but more secure than without any special chars)\n  -n X, where X is an integer: include numeric values from 0 to X (more secure)\n  -p: include pokemon names (significantly more secure)\n  -f <filename>: filename to read in words from (necessary if you don't use -p)\n  -m: make phrases more memorable, ex. adjective adjective noun (less secure) CURRRENTLY UNIMPLEMENTED BC LESS SECURE (also no adjectives heh)\n  -g X, where X is a pokemon generation number: only use pokemon from generation X (not necessarily less secure...)") or True) if len(sys.argv) < 2 or not all([i.isdigit() for i in sys.argv[1]]) else False) or globals().update(words = []) or globals().update(randchar = lambda: chr(random.choice([random.randint(33, 48), random.randint(58, 65), random.randint(91, 97), random.randint(123, 127)]))) or (words.extend(open(sys.argv[sys.argv.index("-f") + 1], "r").read().split('\n')) if "-f" in sys.argv and sys.argv.index("-f") + 1 < len(sys.argv) and sys.argv[sys.argv.index("-f") + 1] in __import__("os").listdir(".") else False) or ([words.append(i.name.title()) for gen in ([int(sys.argv[sys.argv.index("-g") + 1])] if "-g" in sys.argv and sys.argv.index("-g") + 1 < len(sys.argv) and sys.argv[sys.argv.index("-g") + 1].isdigit() else range(1, 9)) for i in __import__("pokebase").generation(gen).pokemon_species][0] if "-p" in sys.argv else False) or ((print("No words in word table. Consider using the -p or -f flags") or True) if len(words) == 0 else False) or globals().update(ppw = [random.choice(words) for _ in range(int(sys.argv[1]))]) or ((globals().update(ppw = ["".join([random.choice([j.upper(), j.lower()]) for j in i]) for i in ppw])) if "-u" in sys.argv else False) or (((globals().update(x = int(sys.argv[sys.argv.index("-c") + 1])) or globals().update(ppw = [i[:x] + randchar() + i[x:] if x < len(i) else i for i in ppw])) if sys.argv.index("-c") + 1 < len(sys.argv) and sys.argv[sys.argv.index("-c") + 1].isdigit() else (globals().update(ppw = [i[:x] + randchar() + i[x:] for i in ppw for x in [random.randint(0, len(i) - 1)]]))) if "-c" in sys.argv else False) or ([ppw.insert(i * 2, str(random.randint(0, int(sys.argv[sys.argv.index("-n") + 1])))) for i in range(int(sys.argv[1]))][0] if "-n" in sys.argv and sys.argv.index("-n") + 1 < len(sys.argv) and all([i.isdigit() for i in sys.argv[sys.argv.index("-n") + 1]]) else False) or print("".join(ppw))
